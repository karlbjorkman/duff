require 'fileutils'
require 'securerandom'

require 'yaml'

require 'duff/logger'

namespace :zsh do

  desc 'Install the .zsh* files'
  task :install do
    manifest_filename = File.expand_path(File.join('..', 'manifest.yml'), __FILE__)

    Duff::LOGGER.info 'Reading manifest_filename'

    data = open(manifest_filename, 'rb') do |io|
      io.read
    end

    Duff::LOGGER.info 'Parsing manifest'

    hash = YAML.load(data)

    files = hash['files'] || []
    directories = hash['directories'] || []

    Duff::LOGGER.info "Manifest specifies #{files.count} files; #{directories.count} directories"

    begin
      raise NotImplementedError, 'Do not have support for directories just yet' if directories.count > 0
    rescue NotImplementedError => e
      Duff::LOGGER.error "#{e.class}: #{e.message}"

      e.backtrace.each do |line|
        Duff::LOGGER.debug "#{line}"
      end
    end

    files.each do |file|
      basename = File.basename(file)

      installation_target = File.join(Dir.home, basename)
      file = File.expand_path(File.join('..', file), manifest_filename)

      Duff::LOGGER.info "Installing #{file} to #{installation_target}"

      if File.exist?(installation_target)
        Duff::LOGGER.warn "File #{installation_target} already exists; removing"

        FileUtils.remove_entry(installation_target)
      end

      Duff::LOGGER.info "Symlinking #{file} to #{installation_target}"

      File.symlink(file, installation_target)

      Duff::LOGGER.info "Successfully installed #{file}"
    end
  end

end
